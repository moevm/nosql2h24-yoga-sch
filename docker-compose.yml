services:
  nginx:
    container_name: nginx
    image: ${CI_REGISTRY_IMAGE}/nginx:${IMAGE_TAG}
    build:
      context: ./nginx/
      dockerfile: Dockerfile
    networks:
      - app-net
    ports:
      - 80:80
      - 8443:8443
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    restart: always

  client:
    container_name: client
    image: ${CI_REGISTRY_IMAGE}/client:${IMAGE_TAG}
    build:
      context: ./client/
      dockerfile: Dockerfile
    networks:
      - app-net

  server:
    container_name: server
    image: ${CI_REGISTRY_IMAGE}/server:${IMAGE_TAG}
    build:
      context: ./server/
      dockerfile: Dockerfile
    networks:
      - app-net
    depends_on:
      mongodb:
        condition: service_started

  mongodb:
    container_name: mongodb
    image: mongo:latest
    restart: always
    command: --config /etc/mongo/mongod.conf
    volumes:
      - db-data:/data/db
      - ./mongodb/:/etc/mongo/
    networks:
      - app-net
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
    healthcheck:
      test: mongosh --eval 'db.adminCommand("ping")' --quiet
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  db-data:

networks:
  app-net:

