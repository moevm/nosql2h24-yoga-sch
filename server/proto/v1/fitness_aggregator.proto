syntax = "proto3";
package fitness_aggregator.v1;

option go_package = "gitlab.com/purposeless-lab/monorepo/fitness-aggregator/server/api/proto/v1";

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

import "v1/entities.proto";

service FitnessAggregator {
  rpc CreateClient(CreateClientRequest) returns (CreateClientResponse) {
    option idempotency_level = IDEMPOTENT;

    option (google.api.http) = {
      post: "/api/v1/client",
      body: "*",
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      responses: {
        key: "201",
        value: {
          schema: {
            json_schema: {ref: ".fitness_aggregator.v1.CreateClientResponse"}
          }
        }
      }
    };
  }

  rpc GetClients(GetClientsRequest) returns (GetClientsResponse) {
    option idempotency_level = NO_SIDE_EFFECTS;

    option (google.api.http) = {
      get: "/api/v1/client",
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      responses: {
        key: "200",
        value: {
          schema: {
            json_schema: {ref: ".fitness_aggregator.v1.GetClientsResponse"}
          }
        }
      }
    };
  }

  rpc GetClient(GetClientRequest) returns (GetClientResponse) {
    option idempotency_level = NO_SIDE_EFFECTS;

    option (google.api.http) = {
      get: "/api/v1/client/{id}",
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      responses: {
        key: "200",
        value: {
          schema: {
            json_schema: {ref: ".fitness_aggregator.v1.GetClientResponse"}
          }
        }
      }
    };
  }

  rpc DeleteClient(DeleteClientRequest) returns (DeleteClientResponse) {
    option idempotency_level = IDEMPOTENCY_UNKNOWN;

    option (google.api.http) = {
      delete: "/api/v1/client/{id}",
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      responses: {
        key: "204",
        value: {
          schema: {
            json_schema: {ref: ".fitness_aggregator.v1.DeleteClientResponse"}
          }
        }
      }
    };
  }

  rpc CreateTrainer(CreateTrainerRequest) returns (CreateTrainerResponse) {
    option idempotency_level = IDEMPOTENT;

    option (google.api.http) = {
      post: "/api/v1/trainer",
      body: "*",
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      responses: {
        key: "201",
        value: {
          schema: {
            json_schema: {ref: ".fitness_aggregator.v1.CreateTrainerResponse"}
          }
        }
      }
    };
  }

  rpc GetTrainers(GetTrainersRequest) returns (GetTrainersResponse) {
    option idempotency_level = NO_SIDE_EFFECTS;

    option (google.api.http) = {
      get: "/api/v1/trainer",
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      responses: {
        key: "200",
        value: {
          schema: {
            json_schema: {ref: ".fitness_aggregator.v1.GetTrainersResponse"}
          }
        }
      }
    };
  }

  rpc GetTrainer(GetTrainerRequest) returns (GetTrainerResponse) {
    option idempotency_level = NO_SIDE_EFFECTS;

    option (google.api.http) = {
      get: "/api/v1/trainer/{id}",
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      responses: {
        key: "200",
        value: {
          schema: {
            json_schema: {ref: ".fitness_aggregator.v1.GetTrainerResponse"}
          }
        }
      }
    };
  }

  rpc DeleteTrainer(DeleteTrainerRequest) returns (DeleteTrainerResponse) {
    option idempotency_level = IDEMPOTENCY_UNKNOWN;

    option (google.api.http) = {
      delete: "/api/v1/trainer/{id}",
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      responses: {
        key: "204",
        value: {
          schema: {
            json_schema: {ref: ".fitness_aggregator.v1.DeleteTrainerResponse"}
          }
        }
      }
    };
  }

  rpc CreateStudio(CreateStudioRequest) returns (CreateStudioResponse) {
    option idempotency_level = IDEMPOTENT;

    option (google.api.http) = {
      post: "/api/v1/studio",
      body: "*",
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      responses: {
        key: "201",
        value: {
          schema: {
            json_schema: {ref: ".fitness_aggregator.v1.CreateStudioResponse"}
          }
        }
      }
    };
  }

  rpc GetStudios(GetStudiosRequest) returns (GetStudiosResponse) {
    option idempotency_level = NO_SIDE_EFFECTS;

    option (google.api.http) = {
      get: "/api/v1/studio",
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      responses: {
        key: "200",
        value: {
          schema: {
            json_schema: {ref: ".fitness_aggregator.v1.GetStudiosResponse"}
          }
        }
      }
    };
  }

  rpc GetStudio(GetStudioRequest) returns (GetStudioResponse) {
    option idempotency_level = NO_SIDE_EFFECTS;

    option (google.api.http) = {
      get: "/api/v1/studio/{id}",
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      responses: {
        key: "200",
        value: {
          schema: {
            json_schema: {ref: ".fitness_aggregator.v1.GetStudioResponse"}
          }
        }
      }
    };
  }

  rpc DeleteStudio(DeleteStudioRequest) returns (DeleteStudioResponse) {
    option idempotency_level = IDEMPOTENCY_UNKNOWN;

    option (google.api.http) = {
      delete: "/api/v1/studio/{id}",
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      responses: {
        key: "204",
        value: {
          schema: {
            json_schema: {ref: ".fitness_aggregator.v1.DeleteStudioResponse"}
          }
        }
      }
    };
  }

  rpc CreateClass(CreateClassRequest) returns (CreateClassResponse) {
    option idempotency_level = IDEMPOTENT;

    option (google.api.http) = {
      post: "/api/v1/class",
      body: "*",
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      responses: {
        key: "201",
        value: {
          schema: {
            json_schema: {ref: ".fitness_aggregator.v1.CreateClassResponse"}
          }
        }
      }
    };
  }

  rpc GetClasses(GetClassesRequest) returns (GetClassesResponse) {
    option idempotency_level = NO_SIDE_EFFECTS;

    option (google.api.http) = {
      get: "/api/v1/class",
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      responses: {
        key: "200",
        value: {
          schema: {
            json_schema: {ref: ".fitness_aggregator.v1.GetClassesResponse"}
          }
        }
      }
    };
  }

  rpc GetClass(GetClassRequest) returns (GetClassResponse) {
    option idempotency_level = NO_SIDE_EFFECTS;

    option (google.api.http) = {
      get: "/api/v1/class/{id}",
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      responses: {
        key: "200",
        value: {
          schema: {
            json_schema: {ref: ".fitness_aggregator.v1.GetClassResponse"}
          }
        }
      }
    };
  }

  rpc DeleteClass(DeleteClassRequest) returns (DeleteClassResponse) {
    option idempotency_level = IDEMPOTENCY_UNKNOWN;

    option (google.api.http) = {
      delete: "/api/v1/class/{id}",
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      responses: {
        key: "204",
        value: {
          schema: {
            json_schema: {ref: ".fitness_aggregator.v1.DeleteClassResponse"}
          }
        }
      }
    };
  }

  rpc CreateAppointment(CreateAppointmentRequest) returns (CreateAppointmentResponse) {
    option idempotency_level = IDEMPOTENT;

    option (google.api.http) = {
      post: "/api/v1/appointment",
      body: "*",
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      responses: {
        key: "204",
        value: {
          schema: {
            json_schema: {ref: ".fitness_aggregator.v1.CreateAppointmentResponse"}
          }
        }
      }
    };
  }

  rpc CancelAppointment(CancelAppointmentRequest) returns (CancelAppointmentResponse) {
    option idempotency_level = IDEMPOTENT;

    option (google.api.http) = {
      delete: "/api/v1/appointment/{client_id}/{class_id}",
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      responses: {
        key: "204",
        value: {
          schema: {
            json_schema: {ref: ".fitness_aggregator.v1.CancelAppointmentResponse"}
          }
        }
      }
    };
  }
}

message CreateClientRequest {
  ClientRef client = 1;
}

message CreateClientResponse {
  string client_id = 1;
}

message GetClientsRequest {}

message GetClientsResponse {
  repeated Person clients = 1;
}

message GetClientRequest {
  string id = 1;
}

message GetClientResponse {
  Person client = 1;
}

message DeleteClientRequest {
  string id = 1;
}

message DeleteClientResponse {}

message CreateTrainerRequest {
  TrainerRef trainer = 1;
}

message CreateTrainerResponse {
  string trainer_id = 1;
}

message GetTrainersRequest {}

message GetTrainersResponse {
  repeated Trainer trainers = 1;
}

message GetTrainerRequest {
  string id = 1;
}

message GetTrainerResponse {
  Trainer trainer = 1;
}

message DeleteTrainerRequest {
  string id = 1;
}

message DeleteTrainerResponse {}

message CreateStudioRequest {
  StudioRef studio = 1;
}

message CreateStudioResponse {
  string studio_id = 1;
}

message GetStudiosRequest {}

message GetStudiosResponse {
  repeated Studio studios = 1;
}

message GetStudioRequest {
  string id = 1;
}

message GetStudioResponse {
  Studio studio = 1;
}

message DeleteStudioRequest {
  string id = 1;
}

message DeleteStudioResponse {}

message CreateClassRequest {
  ClassRef class = 1;
}

message CreateClassResponse {
  string class_id = 1;
}

message GetClassesRequest {}

message GetClassesResponse {
  repeated Class classes = 1;
}

message GetClassRequest {
  string id = 1;
}

message GetClassResponse {
  Class class = 1;
}

message DeleteClassRequest {
  string id = 1;
}

message DeleteClassResponse {}

message CreateAppointmentRequest {
  string client_id = 1;
  string class_id = 2;
}

message CreateAppointmentResponse {}

message CancelAppointmentRequest {
  string client_id = 1;
  string class_id = 2;
}

message CancelAppointmentResponse {}