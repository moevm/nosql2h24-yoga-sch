syntax = "proto3";
package fitness_aggregator.v1;

option go_package = "gitlab.com/purposeless-lab/monorepo/fitness-aggregator/server/api/proto/v1";

import "google/api/annotations.proto";
import "google/protobuf/any.proto";
import "google/protobuf/empty.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

service Authorizer {
  rpc Auth(AuthRequest) returns (AuthResponse) {
    option idempotency_level = NO_SIDE_EFFECTS;

    option (google.api.http) = {
      post: "/api/v1/auth",
      body: "*",
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      responses: {
        key: "200",
        value: {
          schema: {
            json_schema: {ref: ".fitness_aggregator.v1.AuthResponse"}
          }
        }
      }
    };
  }

  rpc IsAdmin(google.protobuf.Empty) returns (google.protobuf.Empty) {
    option idempotency_level = NO_SIDE_EFFECTS;

    option (google.api.http) = {
      post: "/api/v1/auth/is-admin",
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      responses: {
        key: "204",
        value: {
          schema: {
            json_schema: {ref: ".google.protobuf.Empty"}
          }
        }
      }
    };
  }
}

message AuthRequest {
  string phone = 1;
  string password = 2;
}

message AuthResponse {
  string token = 1;
}